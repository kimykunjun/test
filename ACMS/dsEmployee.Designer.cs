//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ACMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEmployee")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEmployee : global::System.Data.DataSet {
        
        private tblEmployeeDataTable tabletblEmployee;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsEmployee() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsEmployee(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblEmployee"] != null)) {
                    base.Tables.Add(new tblEmployeeDataTable(ds.Tables["tblEmployee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblEmployeeDataTable tblEmployee {
            get {
                return this.tabletblEmployee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsEmployee cln = ((dsEmployee)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblEmployee"] != null)) {
                    base.Tables.Add(new tblEmployeeDataTable(ds.Tables["tblEmployee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblEmployee = ((tblEmployeeDataTable)(base.Tables["tblEmployee"]));
            if ((initTable == true)) {
                if ((this.tabletblEmployee != null)) {
                    this.tabletblEmployee.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsEmployee";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEmployee.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblEmployee = new tblEmployeeDataTable();
            base.Tables.Add(this.tabletblEmployee);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblEmployee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEmployee ds = new dsEmployee();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblEmployeeRowChangeEventHandler(object sender, tblEmployeeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblEmployeeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnEmployeeID;
            
            private global::System.Data.DataColumn columnstrEmployeeName;
            
            private global::System.Data.DataColumn columnstrPassword;
            
            private global::System.Data.DataColumn columnstrJobPositionCode;
            
            private global::System.Data.DataColumn columnstrBranchCode;
            
            private global::System.Data.DataColumn columndtEmployeeStartDate;
            
            private global::System.Data.DataColumn columnnRightsLevelID;
            
            private global::System.Data.DataColumn columnmFitnessPackageTarget;
            
            private global::System.Data.DataColumn columnmFitnessProductTarget;
            
            private global::System.Data.DataColumn columnmSpaPackageTarget;
            
            private global::System.Data.DataColumn columnmSpaProductTarget;
            
            private global::System.Data.DataColumn columnmPTPackageTarget;
            
            private global::System.Data.DataColumn columnnInstructorTypeID;
            
            private global::System.Data.DataColumn columnnServiceCommLevel;
            
            private global::System.Data.DataColumn columnstrContactNo;
            
            private global::System.Data.DataColumn columnfPartTime;
            
            private global::System.Data.DataColumn columnnStatusID;
            
            private global::System.Data.DataColumn columnnDepartmentID;
            
            private global::System.Data.DataColumn columnfProbation;
            
            private global::System.Data.DataColumn columnfMaternityLeave;
            
            private global::System.Data.DataColumn columnfChildcareLeave;
            
            private global::System.Data.DataColumn columnfRegistrationFee;
            
            private global::System.Data.DataColumn columnfPtInstructor;
            
            private global::System.Data.DataColumn columnfSalesPerson;
            
            private global::System.Data.DataColumn columnfServiceCommission;
            
            private global::System.Data.DataColumn columnfInstructor;
            
            private global::System.Data.DataColumn columnfMemoGroup;
            
            private global::System.Data.DataColumn columnnLeaveGroup;
            
            private global::System.Data.DataColumn columnfSpaConsult;
            
            private global::System.Data.DataColumn columnfTherapist;
            
            private global::System.Data.DataColumn columnfMSE;
            
            private global::System.Data.DataColumn columnstrRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeDataTable() {
                this.TableName = "tblEmployee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblEmployeeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblEmployeeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nEmployeeIDColumn {
                get {
                    return this.columnnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strEmployeeNameColumn {
                get {
                    return this.columnstrEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strPasswordColumn {
                get {
                    return this.columnstrPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strJobPositionCodeColumn {
                get {
                    return this.columnstrJobPositionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strBranchCodeColumn {
                get {
                    return this.columnstrBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dtEmployeeStartDateColumn {
                get {
                    return this.columndtEmployeeStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nRightsLevelIDColumn {
                get {
                    return this.columnnRightsLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mFitnessPackageTargetColumn {
                get {
                    return this.columnmFitnessPackageTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mFitnessProductTargetColumn {
                get {
                    return this.columnmFitnessProductTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mSpaPackageTargetColumn {
                get {
                    return this.columnmSpaPackageTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mSpaProductTargetColumn {
                get {
                    return this.columnmSpaProductTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mPTPackageTargetColumn {
                get {
                    return this.columnmPTPackageTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nInstructorTypeIDColumn {
                get {
                    return this.columnnInstructorTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nServiceCommLevelColumn {
                get {
                    return this.columnnServiceCommLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strContactNoColumn {
                get {
                    return this.columnstrContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fPartTimeColumn {
                get {
                    return this.columnfPartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nStatusIDColumn {
                get {
                    return this.columnnStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nDepartmentIDColumn {
                get {
                    return this.columnnDepartmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fProbationColumn {
                get {
                    return this.columnfProbation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fMaternityLeaveColumn {
                get {
                    return this.columnfMaternityLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fChildcareLeaveColumn {
                get {
                    return this.columnfChildcareLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fRegistrationFeeColumn {
                get {
                    return this.columnfRegistrationFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fPtInstructorColumn {
                get {
                    return this.columnfPtInstructor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fSalesPersonColumn {
                get {
                    return this.columnfSalesPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fServiceCommissionColumn {
                get {
                    return this.columnfServiceCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fInstructorColumn {
                get {
                    return this.columnfInstructor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fMemoGroupColumn {
                get {
                    return this.columnfMemoGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nLeaveGroupColumn {
                get {
                    return this.columnnLeaveGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fSpaConsultColumn {
                get {
                    return this.columnfSpaConsult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fTherapistColumn {
                get {
                    return this.columnfTherapist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fMSEColumn {
                get {
                    return this.columnfMSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strRemarkColumn {
                get {
                    return this.columnstrRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeRow this[int index] {
                get {
                    return ((tblEmployeeRow)(this.Rows[index]));
                }
            }
            
            public event tblEmployeeRowChangeEventHandler tblEmployeeRowChanging;
            
            public event tblEmployeeRowChangeEventHandler tblEmployeeRowChanged;
            
            public event tblEmployeeRowChangeEventHandler tblEmployeeRowDeleting;
            
            public event tblEmployeeRowChangeEventHandler tblEmployeeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblEmployeeRow(tblEmployeeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeRow AddtblEmployeeRow(
                        int nEmployeeID, 
                        string strEmployeeName, 
                        string strPassword, 
                        string strJobPositionCode, 
                        string strBranchCode, 
                        System.DateTime dtEmployeeStartDate, 
                        int nRightsLevelID, 
                        decimal mFitnessPackageTarget, 
                        decimal mFitnessProductTarget, 
                        decimal mSpaPackageTarget, 
                        decimal mSpaProductTarget, 
                        decimal mPTPackageTarget, 
                        int nInstructorTypeID, 
                        int nServiceCommLevel, 
                        string strContactNo, 
                        bool fPartTime, 
                        bool nStatusID, 
                        int nDepartmentID, 
                        bool fProbation, 
                        bool fMaternityLeave, 
                        bool fChildcareLeave, 
                        bool fRegistrationFee, 
                        bool fPtInstructor, 
                        bool fSalesPerson, 
                        bool fServiceCommission, 
                        bool fInstructor, 
                        bool fMemoGroup, 
                        int nLeaveGroup, 
                        bool fSpaConsult, 
                        bool fTherapist, 
                        bool fMSE, 
                        string strRemark) {
                tblEmployeeRow rowtblEmployeeRow = ((tblEmployeeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nEmployeeID,
                        strEmployeeName,
                        strPassword,
                        strJobPositionCode,
                        strBranchCode,
                        dtEmployeeStartDate,
                        nRightsLevelID,
                        mFitnessPackageTarget,
                        mFitnessProductTarget,
                        mSpaPackageTarget,
                        mSpaProductTarget,
                        mPTPackageTarget,
                        nInstructorTypeID,
                        nServiceCommLevel,
                        strContactNo,
                        fPartTime,
                        nStatusID,
                        nDepartmentID,
                        fProbation,
                        fMaternityLeave,
                        fChildcareLeave,
                        fRegistrationFee,
                        fPtInstructor,
                        fSalesPerson,
                        fServiceCommission,
                        fInstructor,
                        fMemoGroup,
                        nLeaveGroup,
                        fSpaConsult,
                        fTherapist,
                        fMSE,
                        strRemark};
                rowtblEmployeeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblEmployeeRow);
                return rowtblEmployeeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeRow FindBynEmployeeID(int nEmployeeID) {
                return ((tblEmployeeRow)(this.Rows.Find(new object[] {
                            nEmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblEmployeeDataTable cln = ((tblEmployeeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblEmployeeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnEmployeeID = base.Columns["nEmployeeID"];
                this.columnstrEmployeeName = base.Columns["strEmployeeName"];
                this.columnstrPassword = base.Columns["strPassword"];
                this.columnstrJobPositionCode = base.Columns["strJobPositionCode"];
                this.columnstrBranchCode = base.Columns["strBranchCode"];
                this.columndtEmployeeStartDate = base.Columns["dtEmployeeStartDate"];
                this.columnnRightsLevelID = base.Columns["nRightsLevelID"];
                this.columnmFitnessPackageTarget = base.Columns["mFitnessPackageTarget"];
                this.columnmFitnessProductTarget = base.Columns["mFitnessProductTarget"];
                this.columnmSpaPackageTarget = base.Columns["mSpaPackageTarget"];
                this.columnmSpaProductTarget = base.Columns["mSpaProductTarget"];
                this.columnmPTPackageTarget = base.Columns["mPTPackageTarget"];
                this.columnnInstructorTypeID = base.Columns["nInstructorTypeID"];
                this.columnnServiceCommLevel = base.Columns["nServiceCommLevel"];
                this.columnstrContactNo = base.Columns["strContactNo"];
                this.columnfPartTime = base.Columns["fPartTime"];
                this.columnnStatusID = base.Columns["nStatusID"];
                this.columnnDepartmentID = base.Columns["nDepartmentID"];
                this.columnfProbation = base.Columns["fProbation"];
                this.columnfMaternityLeave = base.Columns["fMaternityLeave"];
                this.columnfChildcareLeave = base.Columns["fChildcareLeave"];
                this.columnfRegistrationFee = base.Columns["fRegistrationFee"];
                this.columnfPtInstructor = base.Columns["fPtInstructor"];
                this.columnfSalesPerson = base.Columns["fSalesPerson"];
                this.columnfServiceCommission = base.Columns["fServiceCommission"];
                this.columnfInstructor = base.Columns["fInstructor"];
                this.columnfMemoGroup = base.Columns["fMemoGroup"];
                this.columnnLeaveGroup = base.Columns["nLeaveGroup"];
                this.columnfSpaConsult = base.Columns["fSpaConsult"];
                this.columnfTherapist = base.Columns["fTherapist"];
                this.columnfMSE = base.Columns["fMSE"];
                this.columnstrRemark = base.Columns["strRemark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnEmployeeID = new global::System.Data.DataColumn("nEmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnEmployeeID);
                this.columnstrEmployeeName = new global::System.Data.DataColumn("strEmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrEmployeeName);
                this.columnstrPassword = new global::System.Data.DataColumn("strPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPassword);
                this.columnstrJobPositionCode = new global::System.Data.DataColumn("strJobPositionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrJobPositionCode);
                this.columnstrBranchCode = new global::System.Data.DataColumn("strBranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchCode);
                this.columndtEmployeeStartDate = new global::System.Data.DataColumn("dtEmployeeStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtEmployeeStartDate);
                this.columnnRightsLevelID = new global::System.Data.DataColumn("nRightsLevelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnRightsLevelID);
                this.columnmFitnessPackageTarget = new global::System.Data.DataColumn("mFitnessPackageTarget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmFitnessPackageTarget);
                this.columnmFitnessProductTarget = new global::System.Data.DataColumn("mFitnessProductTarget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmFitnessProductTarget);
                this.columnmSpaPackageTarget = new global::System.Data.DataColumn("mSpaPackageTarget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmSpaPackageTarget);
                this.columnmSpaProductTarget = new global::System.Data.DataColumn("mSpaProductTarget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmSpaProductTarget);
                this.columnmPTPackageTarget = new global::System.Data.DataColumn("mPTPackageTarget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmPTPackageTarget);
                this.columnnInstructorTypeID = new global::System.Data.DataColumn("nInstructorTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnInstructorTypeID);
                this.columnnServiceCommLevel = new global::System.Data.DataColumn("nServiceCommLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnServiceCommLevel);
                this.columnstrContactNo = new global::System.Data.DataColumn("strContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrContactNo);
                this.columnfPartTime = new global::System.Data.DataColumn("fPartTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfPartTime);
                this.columnnStatusID = new global::System.Data.DataColumn("nStatusID", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnStatusID);
                this.columnnDepartmentID = new global::System.Data.DataColumn("nDepartmentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnDepartmentID);
                this.columnfProbation = new global::System.Data.DataColumn("fProbation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfProbation);
                this.columnfMaternityLeave = new global::System.Data.DataColumn("fMaternityLeave", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfMaternityLeave);
                this.columnfChildcareLeave = new global::System.Data.DataColumn("fChildcareLeave", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfChildcareLeave);
                this.columnfRegistrationFee = new global::System.Data.DataColumn("fRegistrationFee", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfRegistrationFee);
                this.columnfPtInstructor = new global::System.Data.DataColumn("fPtInstructor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfPtInstructor);
                this.columnfSalesPerson = new global::System.Data.DataColumn("fSalesPerson", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfSalesPerson);
                this.columnfServiceCommission = new global::System.Data.DataColumn("fServiceCommission", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfServiceCommission);
                this.columnfInstructor = new global::System.Data.DataColumn("fInstructor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfInstructor);
                this.columnfMemoGroup = new global::System.Data.DataColumn("fMemoGroup", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfMemoGroup);
                this.columnnLeaveGroup = new global::System.Data.DataColumn("nLeaveGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnLeaveGroup);
                this.columnfSpaConsult = new global::System.Data.DataColumn("fSpaConsult", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfSpaConsult);
                this.columnfTherapist = new global::System.Data.DataColumn("fTherapist", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfTherapist);
                this.columnfMSE = new global::System.Data.DataColumn("fMSE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfMSE);
                this.columnstrRemark = new global::System.Data.DataColumn("strRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnEmployeeID}, true));
                this.columnnEmployeeID.AllowDBNull = false;
                this.columnnEmployeeID.Unique = true;
                this.columnstrEmployeeName.MaxLength = 50;
                this.columnstrPassword.MaxLength = 50;
                this.columnstrJobPositionCode.AllowDBNull = false;
                this.columnstrJobPositionCode.MaxLength = 50;
                this.columnstrBranchCode.AllowDBNull = false;
                this.columnstrBranchCode.MaxLength = 2;
                this.columnnRightsLevelID.AllowDBNull = false;
                this.columnstrContactNo.MaxLength = 50;
                this.columnfRegistrationFee.AllowDBNull = false;
                this.columnfPtInstructor.AllowDBNull = false;
                this.columnfSalesPerson.AllowDBNull = false;
                this.columnfServiceCommission.AllowDBNull = false;
                this.columnfInstructor.AllowDBNull = false;
                this.columnnLeaveGroup.AllowDBNull = false;
                this.columnstrRemark.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeRow NewtblEmployeeRow() {
                return ((tblEmployeeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblEmployeeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblEmployeeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblEmployeeRowChanged != null)) {
                    this.tblEmployeeRowChanged(this, new tblEmployeeRowChangeEvent(((tblEmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblEmployeeRowChanging != null)) {
                    this.tblEmployeeRowChanging(this, new tblEmployeeRowChangeEvent(((tblEmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblEmployeeRowDeleted != null)) {
                    this.tblEmployeeRowDeleted(this, new tblEmployeeRowChangeEvent(((tblEmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblEmployeeRowDeleting != null)) {
                    this.tblEmployeeRowDeleting(this, new tblEmployeeRowChangeEvent(((tblEmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblEmployeeRow(tblEmployeeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEmployee ds = new dsEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblEmployeeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblEmployeeRow : global::System.Data.DataRow {
            
            private tblEmployeeDataTable tabletblEmployee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblEmployeeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblEmployee = ((tblEmployeeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nEmployeeID {
                get {
                    return ((int)(this[this.tabletblEmployee.nEmployeeIDColumn]));
                }
                set {
                    this[this.tabletblEmployee.nEmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strEmployeeName {
                get {
                    try {
                        return ((string)(this[this.tabletblEmployee.strEmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strEmployeeName\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.strEmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strPassword {
                get {
                    try {
                        return ((string)(this[this.tabletblEmployee.strPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPassword\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.strPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strJobPositionCode {
                get {
                    return ((string)(this[this.tabletblEmployee.strJobPositionCodeColumn]));
                }
                set {
                    this[this.tabletblEmployee.strJobPositionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strBranchCode {
                get {
                    return ((string)(this[this.tabletblEmployee.strBranchCodeColumn]));
                }
                set {
                    this[this.tabletblEmployee.strBranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dtEmployeeStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblEmployee.dtEmployeeStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtEmployeeStartDate\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.dtEmployeeStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nRightsLevelID {
                get {
                    return ((int)(this[this.tabletblEmployee.nRightsLevelIDColumn]));
                }
                set {
                    this[this.tabletblEmployee.nRightsLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mFitnessPackageTarget {
                get {
                    try {
                        return ((decimal)(this[this.tabletblEmployee.mFitnessPackageTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mFitnessPackageTarget\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.mFitnessPackageTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mFitnessProductTarget {
                get {
                    try {
                        return ((decimal)(this[this.tabletblEmployee.mFitnessProductTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mFitnessProductTarget\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.mFitnessProductTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mSpaPackageTarget {
                get {
                    try {
                        return ((decimal)(this[this.tabletblEmployee.mSpaPackageTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mSpaPackageTarget\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.mSpaPackageTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mSpaProductTarget {
                get {
                    try {
                        return ((decimal)(this[this.tabletblEmployee.mSpaProductTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mSpaProductTarget\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.mSpaProductTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mPTPackageTarget {
                get {
                    try {
                        return ((decimal)(this[this.tabletblEmployee.mPTPackageTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mPTPackageTarget\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.mPTPackageTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nInstructorTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletblEmployee.nInstructorTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nInstructorTypeID\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.nInstructorTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nServiceCommLevel {
                get {
                    try {
                        return ((int)(this[this.tabletblEmployee.nServiceCommLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nServiceCommLevel\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.nServiceCommLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strContactNo {
                get {
                    try {
                        return ((string)(this[this.tabletblEmployee.strContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strContactNo\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.strContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fPartTime {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fPartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fPartTime\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fPartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool nStatusID {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.nStatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nStatusID\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.nStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nDepartmentID {
                get {
                    try {
                        return ((int)(this[this.tabletblEmployee.nDepartmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nDepartmentID\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.nDepartmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fProbation {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fProbationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fProbation\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fProbationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fMaternityLeave {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fMaternityLeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fMaternityLeave\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fMaternityLeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fChildcareLeave {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fChildcareLeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fChildcareLeave\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fChildcareLeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fRegistrationFee {
                get {
                    return ((bool)(this[this.tabletblEmployee.fRegistrationFeeColumn]));
                }
                set {
                    this[this.tabletblEmployee.fRegistrationFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fPtInstructor {
                get {
                    return ((bool)(this[this.tabletblEmployee.fPtInstructorColumn]));
                }
                set {
                    this[this.tabletblEmployee.fPtInstructorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fSalesPerson {
                get {
                    return ((bool)(this[this.tabletblEmployee.fSalesPersonColumn]));
                }
                set {
                    this[this.tabletblEmployee.fSalesPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fServiceCommission {
                get {
                    return ((bool)(this[this.tabletblEmployee.fServiceCommissionColumn]));
                }
                set {
                    this[this.tabletblEmployee.fServiceCommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fInstructor {
                get {
                    return ((bool)(this[this.tabletblEmployee.fInstructorColumn]));
                }
                set {
                    this[this.tabletblEmployee.fInstructorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fMemoGroup {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fMemoGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fMemoGroup\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fMemoGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nLeaveGroup {
                get {
                    return ((int)(this[this.tabletblEmployee.nLeaveGroupColumn]));
                }
                set {
                    this[this.tabletblEmployee.nLeaveGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fSpaConsult {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fSpaConsultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fSpaConsult\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fSpaConsultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fTherapist {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fTherapistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fTherapist\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fTherapistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fMSE {
                get {
                    try {
                        return ((bool)(this[this.tabletblEmployee.fMSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fMSE\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.fMSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strRemark {
                get {
                    try {
                        return ((string)(this[this.tabletblEmployee.strRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strRemark\' in table \'tblEmployee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblEmployee.strRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrEmployeeNameNull() {
                return this.IsNull(this.tabletblEmployee.strEmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrEmployeeNameNull() {
                this[this.tabletblEmployee.strEmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrPasswordNull() {
                return this.IsNull(this.tabletblEmployee.strPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrPasswordNull() {
                this[this.tabletblEmployee.strPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdtEmployeeStartDateNull() {
                return this.IsNull(this.tabletblEmployee.dtEmployeeStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdtEmployeeStartDateNull() {
                this[this.tabletblEmployee.dtEmployeeStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmFitnessPackageTargetNull() {
                return this.IsNull(this.tabletblEmployee.mFitnessPackageTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmFitnessPackageTargetNull() {
                this[this.tabletblEmployee.mFitnessPackageTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmFitnessProductTargetNull() {
                return this.IsNull(this.tabletblEmployee.mFitnessProductTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmFitnessProductTargetNull() {
                this[this.tabletblEmployee.mFitnessProductTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmSpaPackageTargetNull() {
                return this.IsNull(this.tabletblEmployee.mSpaPackageTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmSpaPackageTargetNull() {
                this[this.tabletblEmployee.mSpaPackageTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmSpaProductTargetNull() {
                return this.IsNull(this.tabletblEmployee.mSpaProductTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmSpaProductTargetNull() {
                this[this.tabletblEmployee.mSpaProductTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmPTPackageTargetNull() {
                return this.IsNull(this.tabletblEmployee.mPTPackageTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmPTPackageTargetNull() {
                this[this.tabletblEmployee.mPTPackageTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnInstructorTypeIDNull() {
                return this.IsNull(this.tabletblEmployee.nInstructorTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnInstructorTypeIDNull() {
                this[this.tabletblEmployee.nInstructorTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnServiceCommLevelNull() {
                return this.IsNull(this.tabletblEmployee.nServiceCommLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnServiceCommLevelNull() {
                this[this.tabletblEmployee.nServiceCommLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrContactNoNull() {
                return this.IsNull(this.tabletblEmployee.strContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrContactNoNull() {
                this[this.tabletblEmployee.strContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfPartTimeNull() {
                return this.IsNull(this.tabletblEmployee.fPartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfPartTimeNull() {
                this[this.tabletblEmployee.fPartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnStatusIDNull() {
                return this.IsNull(this.tabletblEmployee.nStatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnStatusIDNull() {
                this[this.tabletblEmployee.nStatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnDepartmentIDNull() {
                return this.IsNull(this.tabletblEmployee.nDepartmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnDepartmentIDNull() {
                this[this.tabletblEmployee.nDepartmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfProbationNull() {
                return this.IsNull(this.tabletblEmployee.fProbationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfProbationNull() {
                this[this.tabletblEmployee.fProbationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfMaternityLeaveNull() {
                return this.IsNull(this.tabletblEmployee.fMaternityLeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfMaternityLeaveNull() {
                this[this.tabletblEmployee.fMaternityLeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfChildcareLeaveNull() {
                return this.IsNull(this.tabletblEmployee.fChildcareLeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfChildcareLeaveNull() {
                this[this.tabletblEmployee.fChildcareLeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfMemoGroupNull() {
                return this.IsNull(this.tabletblEmployee.fMemoGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfMemoGroupNull() {
                this[this.tabletblEmployee.fMemoGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfSpaConsultNull() {
                return this.IsNull(this.tabletblEmployee.fSpaConsultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfSpaConsultNull() {
                this[this.tabletblEmployee.fSpaConsultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfTherapistNull() {
                return this.IsNull(this.tabletblEmployee.fTherapistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfTherapistNull() {
                this[this.tabletblEmployee.fTherapistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfMSENull() {
                return this.IsNull(this.tabletblEmployee.fMSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfMSENull() {
                this[this.tabletblEmployee.fMSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrRemarkNull() {
                return this.IsNull(this.tabletblEmployee.strRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrRemarkNull() {
                this[this.tabletblEmployee.strRemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblEmployeeRowChangeEvent : global::System.EventArgs {
            
            private tblEmployeeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeRowChangeEvent(tblEmployeeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblEmployeeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ACMS.dsEmployeeTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblEmployeeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblEmployeeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblEmployee";
            tableMapping.ColumnMappings.Add("nEmployeeID", "nEmployeeID");
            tableMapping.ColumnMappings.Add("strEmployeeName", "strEmployeeName");
            tableMapping.ColumnMappings.Add("strPassword", "strPassword");
            tableMapping.ColumnMappings.Add("strJobPositionCode", "strJobPositionCode");
            tableMapping.ColumnMappings.Add("strBranchCode", "strBranchCode");
            tableMapping.ColumnMappings.Add("dtEmployeeStartDate", "dtEmployeeStartDate");
            tableMapping.ColumnMappings.Add("nRightsLevelID", "nRightsLevelID");
            tableMapping.ColumnMappings.Add("mFitnessPackageTarget", "mFitnessPackageTarget");
            tableMapping.ColumnMappings.Add("mFitnessProductTarget", "mFitnessProductTarget");
            tableMapping.ColumnMappings.Add("mSpaPackageTarget", "mSpaPackageTarget");
            tableMapping.ColumnMappings.Add("mSpaProductTarget", "mSpaProductTarget");
            tableMapping.ColumnMappings.Add("mPTPackageTarget", "mPTPackageTarget");
            tableMapping.ColumnMappings.Add("nInstructorTypeID", "nInstructorTypeID");
            tableMapping.ColumnMappings.Add("nServiceCommLevel", "nServiceCommLevel");
            tableMapping.ColumnMappings.Add("strContactNo", "strContactNo");
            tableMapping.ColumnMappings.Add("fPartTime", "fPartTime");
            tableMapping.ColumnMappings.Add("nStatusID", "nStatusID");
            tableMapping.ColumnMappings.Add("nDepartmentID", "nDepartmentID");
            tableMapping.ColumnMappings.Add("fProbation", "fProbation");
            tableMapping.ColumnMappings.Add("fMaternityLeave", "fMaternityLeave");
            tableMapping.ColumnMappings.Add("fChildcareLeave", "fChildcareLeave");
            tableMapping.ColumnMappings.Add("fRegistrationFee", "fRegistrationFee");
            tableMapping.ColumnMappings.Add("fPtInstructor", "fPtInstructor");
            tableMapping.ColumnMappings.Add("fSalesPerson", "fSalesPerson");
            tableMapping.ColumnMappings.Add("fServiceCommission", "fServiceCommission");
            tableMapping.ColumnMappings.Add("fInstructor", "fInstructor");
            tableMapping.ColumnMappings.Add("fMemoGroup", "fMemoGroup");
            tableMapping.ColumnMappings.Add("nLeaveGroup", "nLeaveGroup");
            tableMapping.ColumnMappings.Add("fSpaConsult", "fSpaConsult");
            tableMapping.ColumnMappings.Add("fTherapist", "fTherapist");
            tableMapping.ColumnMappings.Add("fMSE", "fMSE");
            tableMapping.ColumnMappings.Add("strRemark", "strRemark");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblEmployee] WHERE (([nEmployeeID] = @Original_nEmployeeID) AN" +
                "D ((@IsNull_strEmployeeName = 1 AND [strEmployeeName] IS NULL) OR ([strEmployeeN" +
                "ame] = @Original_strEmployeeName)) AND ((@IsNull_strPassword = 1 AND [strPasswor" +
                "d] IS NULL) OR ([strPassword] = @Original_strPassword)) AND ([strJobPositionCode" +
                "] = @Original_strJobPositionCode) AND ([strBranchCode] = @Original_strBranchCode" +
                ") AND ((@IsNull_dtEmployeeStartDate = 1 AND [dtEmployeeStartDate] IS NULL) OR ([" +
                "dtEmployeeStartDate] = @Original_dtEmployeeStartDate)) AND ([nRightsLevelID] = @" +
                "Original_nRightsLevelID) AND ((@IsNull_mFitnessPackageTarget = 1 AND [mFitnessPa" +
                "ckageTarget] IS NULL) OR ([mFitnessPackageTarget] = @Original_mFitnessPackageTar" +
                "get)) AND ((@IsNull_mFitnessProductTarget = 1 AND [mFitnessProductTarget] IS NUL" +
                "L) OR ([mFitnessProductTarget] = @Original_mFitnessProductTarget)) AND ((@IsNull" +
                "_mSpaPackageTarget = 1 AND [mSpaPackageTarget] IS NULL) OR ([mSpaPackageTarget] " +
                "= @Original_mSpaPackageTarget)) AND ((@IsNull_mSpaProductTarget = 1 AND [mSpaPro" +
                "ductTarget] IS NULL) OR ([mSpaProductTarget] = @Original_mSpaProductTarget)) AND" +
                " ((@IsNull_mPTPackageTarget = 1 AND [mPTPackageTarget] IS NULL) OR ([mPTPackageT" +
                "arget] = @Original_mPTPackageTarget)) AND ((@IsNull_nInstructorTypeID = 1 AND [n" +
                "InstructorTypeID] IS NULL) OR ([nInstructorTypeID] = @Original_nInstructorTypeID" +
                ")) AND ((@IsNull_nServiceCommLevel = 1 AND [nServiceCommLevel] IS NULL) OR ([nSe" +
                "rviceCommLevel] = @Original_nServiceCommLevel)) AND ((@IsNull_strContactNo = 1 A" +
                "ND [strContactNo] IS NULL) OR ([strContactNo] = @Original_strContactNo)) AND ((@" +
                "IsNull_fPartTime = 1 AND [fPartTime] IS NULL) OR ([fPartTime] = @Original_fPartT" +
                "ime)) AND ((@IsNull_nStatusID = 1 AND [nStatusID] IS NULL) OR ([nStatusID] = @Or" +
                "iginal_nStatusID)) AND ((@IsNull_nDepartmentID = 1 AND [nDepartmentID] IS NULL) " +
                "OR ([nDepartmentID] = @Original_nDepartmentID)) AND ((@IsNull_fProbation = 1 AND" +
                " [fProbation] IS NULL) OR ([fProbation] = @Original_fProbation)) AND ((@IsNull_f" +
                "MaternityLeave = 1 AND [fMaternityLeave] IS NULL) OR ([fMaternityLeave] = @Origi" +
                "nal_fMaternityLeave)) AND ((@IsNull_fChildcareLeave = 1 AND [fChildcareLeave] IS" +
                " NULL) OR ([fChildcareLeave] = @Original_fChildcareLeave)) AND ([fRegistrationFe" +
                "e] = @Original_fRegistrationFee) AND ([fPtInstructor] = @Original_fPtInstructor)" +
                " AND ([fSalesPerson] = @Original_fSalesPerson) AND ([fServiceCommission] = @Orig" +
                "inal_fServiceCommission) AND ([fInstructor] = @Original_fInstructor) AND ((@IsNu" +
                "ll_fMemoGroup = 1 AND [fMemoGroup] IS NULL) OR ([fMemoGroup] = @Original_fMemoGr" +
                "oup)) AND ([nLeaveGroup] = @Original_nLeaveGroup) AND ((@IsNull_fSpaConsult = 1 " +
                "AND [fSpaConsult] IS NULL) OR ([fSpaConsult] = @Original_fSpaConsult)) AND ((@Is" +
                "Null_fTherapist = 1 AND [fTherapist] IS NULL) OR ([fTherapist] = @Original_fTher" +
                "apist)) AND ((@IsNull_fMSE = 1 AND [fMSE] IS NULL) OR ([fMSE] = @Original_fMSE))" +
                " AND ((@IsNull_strRemark = 1 AND [strRemark] IS NULL) OR ([strRemark] = @Origina" +
                "l_strRemark)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nEmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nEmployeeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strEmployeeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEmployeeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strEmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEmployeeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strJobPositionCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strJobPositionCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strBranchCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strBranchCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dtEmployeeStartDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtEmployeeStartDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dtEmployeeStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtEmployeeStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nRightsLevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nRightsLevelID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mFitnessPackageTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessPackageTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mFitnessPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessPackageTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mFitnessProductTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessProductTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mFitnessProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessProductTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mSpaPackageTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaPackageTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mSpaPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaPackageTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mSpaProductTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaProductTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mSpaProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaProductTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mPTPackageTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mPTPackageTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mPTPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mPTPackageTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nInstructorTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nInstructorTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nInstructorTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nInstructorTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nServiceCommLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nServiceCommLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nServiceCommLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nServiceCommLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strContactNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strContactNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strContactNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fPartTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPartTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fPartTime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nStatusID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nStatusID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nStatusID", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nStatusID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nDepartmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nDepartmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fProbation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fProbation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fProbation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fProbation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fMaternityLeave", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMaternityLeave", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fMaternityLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMaternityLeave", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fChildcareLeave", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fChildcareLeave", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fChildcareLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fChildcareLeave", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fRegistrationFee", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fRegistrationFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fPtInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPtInstructor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fSalesPerson", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSalesPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fServiceCommission", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fServiceCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fInstructor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fMemoGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMemoGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fMemoGroup", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMemoGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nLeaveGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nLeaveGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fSpaConsult", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSpaConsult", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fSpaConsult", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSpaConsult", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fTherapist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fTherapist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fTherapist", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fTherapist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fMSE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMSE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fMSE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tblEmployee] ([nEmployeeID], [strEmployeeName], [strPassword]," +
                " [strJobPositionCode], [strBranchCode], [dtEmployeeStartDate], [nRightsLevelID]," +
                " [mFitnessPackageTarget], [mFitnessProductTarget], [mSpaPackageTarget], [mSpaPro" +
                "ductTarget], [mPTPackageTarget], [nInstructorTypeID], [nServiceCommLevel], [strC" +
                "ontactNo], [fPartTime], [nStatusID], [nDepartmentID], [fProbation], [fMaternityL" +
                "eave], [fChildcareLeave], [fRegistrationFee], [fPtInstructor], [fSalesPerson], [" +
                "fServiceCommission], [fInstructor], [fMemoGroup], [nLeaveGroup], [fSpaConsult], " +
                "[fTherapist], [fMSE], [strRemark]) VALUES (@nEmployeeID, @strEmployeeName, @strP" +
                "assword, @strJobPositionCode, @strBranchCode, @dtEmployeeStartDate, @nRightsLeve" +
                "lID, @mFitnessPackageTarget, @mFitnessProductTarget, @mSpaPackageTarget, @mSpaPr" +
                "oductTarget, @mPTPackageTarget, @nInstructorTypeID, @nServiceCommLevel, @strCont" +
                "actNo, @fPartTime, @nStatusID, @nDepartmentID, @fProbation, @fMaternityLeave, @f" +
                "ChildcareLeave, @fRegistrationFee, @fPtInstructor, @fSalesPerson, @fServiceCommi" +
                "ssion, @fInstructor, @fMemoGroup, @nLeaveGroup, @fSpaConsult, @fTherapist, @fMSE" +
                ", @strRemark);\r\nSELECT nEmployeeID, strEmployeeName, strPassword, strJobPosition" +
                "Code, strBranchCode, dtEmployeeStartDate, nRightsLevelID, mFitnessPackageTarget," +
                " mFitnessProductTarget, mSpaPackageTarget, mSpaProductTarget, mPTPackageTarget, " +
                "nInstructorTypeID, nServiceCommLevel, strContactNo, fPartTime, nStatusID, nDepar" +
                "tmentID, fProbation, fMaternityLeave, fChildcareLeave, fRegistrationFee, fPtInst" +
                "ructor, fSalesPerson, fServiceCommission, fInstructor, fMemoGroup, nLeaveGroup, " +
                "fSpaConsult, fTherapist, fMSE, strRemark FROM tblEmployee WHERE (nEmployeeID = @" +
                "nEmployeeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nEmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nEmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strJobPositionCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strJobPositionCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strBranchCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strBranchCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtEmployeeStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtEmployeeStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nRightsLevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nRightsLevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mFitnessPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessPackageTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mFitnessProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessProductTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mSpaPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaPackageTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mSpaProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaProductTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mPTPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mPTPackageTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nInstructorTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nInstructorTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nServiceCommLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nServiceCommLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fPartTime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nStatusID", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nStatusID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nDepartmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fProbation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fProbation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fMaternityLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMaternityLeave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fChildcareLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fChildcareLeave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fRegistrationFee", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fRegistrationFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fPtInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPtInstructor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fSalesPerson", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSalesPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fServiceCommission", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fServiceCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fInstructor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fMemoGroup", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMemoGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nLeaveGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nLeaveGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fSpaConsult", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSpaConsult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fTherapist", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fTherapist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fMSE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblEmployee] SET [nEmployeeID] = @nEmployeeID, [strEmployeeName] = " +
                "@strEmployeeName, [strPassword] = @strPassword, [strJobPositionCode] = @strJobPo" +
                "sitionCode, [strBranchCode] = @strBranchCode, [dtEmployeeStartDate] = @dtEmploye" +
                "eStartDate, [nRightsLevelID] = @nRightsLevelID, [mFitnessPackageTarget] = @mFitn" +
                "essPackageTarget, [mFitnessProductTarget] = @mFitnessProductTarget, [mSpaPackage" +
                "Target] = @mSpaPackageTarget, [mSpaProductTarget] = @mSpaProductTarget, [mPTPack" +
                "ageTarget] = @mPTPackageTarget, [nInstructorTypeID] = @nInstructorTypeID, [nServ" +
                "iceCommLevel] = @nServiceCommLevel, [strContactNo] = @strContactNo, [fPartTime] " +
                "= @fPartTime, [nStatusID] = @nStatusID, [nDepartmentID] = @nDepartmentID, [fProb" +
                "ation] = @fProbation, [fMaternityLeave] = @fMaternityLeave, [fChildcareLeave] = " +
                "@fChildcareLeave, [fRegistrationFee] = @fRegistrationFee, [fPtInstructor] = @fPt" +
                "Instructor, [fSalesPerson] = @fSalesPerson, [fServiceCommission] = @fServiceComm" +
                "ission, [fInstructor] = @fInstructor, [fMemoGroup] = @fMemoGroup, [nLeaveGroup] " +
                "= @nLeaveGroup, [fSpaConsult] = @fSpaConsult, [fTherapist] = @fTherapist, [fMSE]" +
                " = @fMSE, [strRemark] = @strRemark WHERE (([nEmployeeID] = @Original_nEmployeeID" +
                ") AND ((@IsNull_strEmployeeName = 1 AND [strEmployeeName] IS NULL) OR ([strEmplo" +
                "yeeName] = @Original_strEmployeeName)) AND ((@IsNull_strPassword = 1 AND [strPas" +
                "sword] IS NULL) OR ([strPassword] = @Original_strPassword)) AND ([strJobPosition" +
                "Code] = @Original_strJobPositionCode) AND ([strBranchCode] = @Original_strBranch" +
                "Code) AND ((@IsNull_dtEmployeeStartDate = 1 AND [dtEmployeeStartDate] IS NULL) O" +
                "R ([dtEmployeeStartDate] = @Original_dtEmployeeStartDate)) AND ([nRightsLevelID]" +
                " = @Original_nRightsLevelID) AND ((@IsNull_mFitnessPackageTarget = 1 AND [mFitne" +
                "ssPackageTarget] IS NULL) OR ([mFitnessPackageTarget] = @Original_mFitnessPackag" +
                "eTarget)) AND ((@IsNull_mFitnessProductTarget = 1 AND [mFitnessProductTarget] IS" +
                " NULL) OR ([mFitnessProductTarget] = @Original_mFitnessProductTarget)) AND ((@Is" +
                "Null_mSpaPackageTarget = 1 AND [mSpaPackageTarget] IS NULL) OR ([mSpaPackageTarg" +
                "et] = @Original_mSpaPackageTarget)) AND ((@IsNull_mSpaProductTarget = 1 AND [mSp" +
                "aProductTarget] IS NULL) OR ([mSpaProductTarget] = @Original_mSpaProductTarget))" +
                " AND ((@IsNull_mPTPackageTarget = 1 AND [mPTPackageTarget] IS NULL) OR ([mPTPack" +
                "ageTarget] = @Original_mPTPackageTarget)) AND ((@IsNull_nInstructorTypeID = 1 AN" +
                "D [nInstructorTypeID] IS NULL) OR ([nInstructorTypeID] = @Original_nInstructorTy" +
                "peID)) AND ((@IsNull_nServiceCommLevel = 1 AND [nServiceCommLevel] IS NULL) OR (" +
                "[nServiceCommLevel] = @Original_nServiceCommLevel)) AND ((@IsNull_strContactNo =" +
                " 1 AND [strContactNo] IS NULL) OR ([strContactNo] = @Original_strContactNo)) AND" +
                " ((@IsNull_fPartTime = 1 AND [fPartTime] IS NULL) OR ([fPartTime] = @Original_fP" +
                "artTime)) AND ((@IsNull_nStatusID = 1 AND [nStatusID] IS NULL) OR ([nStatusID] =" +
                " @Original_nStatusID)) AND ((@IsNull_nDepartmentID = 1 AND [nDepartmentID] IS NU" +
                "LL) OR ([nDepartmentID] = @Original_nDepartmentID)) AND ((@IsNull_fProbation = 1" +
                " AND [fProbation] IS NULL) OR ([fProbation] = @Original_fProbation)) AND ((@IsNu" +
                "ll_fMaternityLeave = 1 AND [fMaternityLeave] IS NULL) OR ([fMaternityLeave] = @O" +
                "riginal_fMaternityLeave)) AND ((@IsNull_fChildcareLeave = 1 AND [fChildcareLeave" +
                "] IS NULL) OR ([fChildcareLeave] = @Original_fChildcareLeave)) AND ([fRegistrati" +
                "onFee] = @Original_fRegistrationFee) AND ([fPtInstructor] = @Original_fPtInstruc" +
                "tor) AND ([fSalesPerson] = @Original_fSalesPerson) AND ([fServiceCommission] = @" +
                "Original_fServiceCommission) AND ([fInstructor] = @Original_fInstructor) AND ((@" +
                "IsNull_fMemoGroup = 1 AND [fMemoGroup] IS NULL) OR ([fMemoGroup] = @Original_fMe" +
                "moGroup)) AND ([nLeaveGroup] = @Original_nLeaveGroup) AND ((@IsNull_fSpaConsult " +
                "= 1 AND [fSpaConsult] IS NULL) OR ([fSpaConsult] = @Original_fSpaConsult)) AND (" +
                "(@IsNull_fTherapist = 1 AND [fTherapist] IS NULL) OR ([fTherapist] = @Original_f" +
                "Therapist)) AND ((@IsNull_fMSE = 1 AND [fMSE] IS NULL) OR ([fMSE] = @Original_fM" +
                "SE)) AND ((@IsNull_strRemark = 1 AND [strRemark] IS NULL) OR ([strRemark] = @Ori" +
                "ginal_strRemark)));\r\nSELECT nEmployeeID, strEmployeeName, strPassword, strJobPos" +
                "itionCode, strBranchCode, dtEmployeeStartDate, nRightsLevelID, mFitnessPackageTa" +
                "rget, mFitnessProductTarget, mSpaPackageTarget, mSpaProductTarget, mPTPackageTar" +
                "get, nInstructorTypeID, nServiceCommLevel, strContactNo, fPartTime, nStatusID, n" +
                "DepartmentID, fProbation, fMaternityLeave, fChildcareLeave, fRegistrationFee, fP" +
                "tInstructor, fSalesPerson, fServiceCommission, fInstructor, fMemoGroup, nLeaveGr" +
                "oup, fSpaConsult, fTherapist, fMSE, strRemark FROM tblEmployee WHERE (nEmployeeI" +
                "D = @nEmployeeID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nEmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nEmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strJobPositionCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strJobPositionCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strBranchCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strBranchCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtEmployeeStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtEmployeeStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nRightsLevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nRightsLevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mFitnessPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessPackageTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mFitnessProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessProductTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mSpaPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaPackageTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mSpaProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaProductTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mPTPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mPTPackageTarget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nInstructorTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nInstructorTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nServiceCommLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nServiceCommLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fPartTime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nStatusID", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nStatusID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nDepartmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fProbation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fProbation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fMaternityLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMaternityLeave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fChildcareLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fChildcareLeave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fRegistrationFee", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fRegistrationFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fPtInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPtInstructor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fSalesPerson", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSalesPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fServiceCommission", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fServiceCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fInstructor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fMemoGroup", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMemoGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nLeaveGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nLeaveGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fSpaConsult", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSpaConsult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fTherapist", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fTherapist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fMSE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nEmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nEmployeeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strEmployeeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEmployeeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strEmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEmployeeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strJobPositionCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strJobPositionCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strBranchCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strBranchCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dtEmployeeStartDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtEmployeeStartDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dtEmployeeStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtEmployeeStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nRightsLevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nRightsLevelID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mFitnessPackageTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessPackageTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mFitnessPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessPackageTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mFitnessProductTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessProductTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mFitnessProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mFitnessProductTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mSpaPackageTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaPackageTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mSpaPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaPackageTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mSpaProductTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaProductTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mSpaProductTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mSpaProductTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_mPTPackageTarget", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mPTPackageTarget", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mPTPackageTarget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mPTPackageTarget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nInstructorTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nInstructorTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nInstructorTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nInstructorTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nServiceCommLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nServiceCommLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nServiceCommLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nServiceCommLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strContactNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strContactNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strContactNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fPartTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPartTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fPartTime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nStatusID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nStatusID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nStatusID", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nStatusID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nDepartmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nDepartmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fProbation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fProbation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fProbation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fProbation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fMaternityLeave", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMaternityLeave", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fMaternityLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMaternityLeave", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fChildcareLeave", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fChildcareLeave", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fChildcareLeave", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fChildcareLeave", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fRegistrationFee", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fRegistrationFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fPtInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fPtInstructor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fSalesPerson", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSalesPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fServiceCommission", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fServiceCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fInstructor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fInstructor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fMemoGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMemoGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fMemoGroup", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMemoGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nLeaveGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nLeaveGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fSpaConsult", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSpaConsult", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fSpaConsult", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fSpaConsult", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fTherapist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fTherapist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fTherapist", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fTherapist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fMSE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMSE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fMSE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fMSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ACMS.Properties.Settings.Default.ACMSConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT nEmployeeID, strEmployeeName, strPassword, strJobPositionCode, strBranchCode, dtEmployeeStartDate, nRightsLevelID, mFitnessPackageTarget, mFitnessProductTarget, mSpaPackageTarget, mSpaProductTarget, mPTPackageTarget, nInstructorTypeID, nServiceCommLevel, strContactNo, fPartTime, nStatusID, nDepartmentID, fProbation, fMaternityLeave, fChildcareLeave, fRegistrationFee, fPtInstructor, fSalesPerson, fServiceCommission, fInstructor, fMemoGroup, nLeaveGroup, fSpaConsult, fTherapist, fMSE, strRemark FROM dbo.tblEmployee where nDepartmentID = @nDepartment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nDepartment", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nDepartmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEmployee.tblEmployeeDataTable dataTable, global::System.Nullable<int> nDepartment) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((nDepartment.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nDepartment.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEmployee.tblEmployeeDataTable GetData(global::System.Nullable<int> nDepartment) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((nDepartment.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nDepartment.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            dsEmployee.tblEmployeeDataTable dataTable = new dsEmployee.tblEmployeeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmployee.tblEmployeeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmployee dataSet) {
            return this.Adapter.Update(dataSet, "tblEmployee");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_nEmployeeID, 
                    string Original_strEmployeeName, 
                    string Original_strPassword, 
                    string Original_strJobPositionCode, 
                    string Original_strBranchCode, 
                    global::System.Nullable<global::System.DateTime> Original_dtEmployeeStartDate, 
                    int Original_nRightsLevelID, 
                    global::System.Nullable<decimal> Original_mFitnessPackageTarget, 
                    global::System.Nullable<decimal> Original_mFitnessProductTarget, 
                    global::System.Nullable<decimal> Original_mSpaPackageTarget, 
                    global::System.Nullable<decimal> Original_mSpaProductTarget, 
                    global::System.Nullable<decimal> Original_mPTPackageTarget, 
                    global::System.Nullable<int> Original_nInstructorTypeID, 
                    global::System.Nullable<int> Original_nServiceCommLevel, 
                    string Original_strContactNo, 
                    global::System.Nullable<bool> Original_fPartTime, 
                    global::System.Nullable<bool> Original_nStatusID, 
                    global::System.Nullable<int> Original_nDepartmentID, 
                    global::System.Nullable<bool> Original_fProbation, 
                    global::System.Nullable<bool> Original_fMaternityLeave, 
                    global::System.Nullable<bool> Original_fChildcareLeave, 
                    bool Original_fRegistrationFee, 
                    bool Original_fPtInstructor, 
                    bool Original_fSalesPerson, 
                    bool Original_fServiceCommission, 
                    bool Original_fInstructor, 
                    global::System.Nullable<bool> Original_fMemoGroup, 
                    int Original_nLeaveGroup, 
                    global::System.Nullable<bool> Original_fSpaConsult, 
                    global::System.Nullable<bool> Original_fTherapist, 
                    global::System.Nullable<bool> Original_fMSE, 
                    string Original_strRemark) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_nEmployeeID));
            if ((Original_strEmployeeName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_strEmployeeName));
            }
            if ((Original_strPassword == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_strPassword));
            }
            if ((Original_strJobPositionCode == null)) {
                throw new global::System.ArgumentNullException("Original_strJobPositionCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_strJobPositionCode));
            }
            if ((Original_strBranchCode == null)) {
                throw new global::System.ArgumentNullException("Original_strBranchCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_strBranchCode));
            }
            if ((Original_dtEmployeeStartDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_dtEmployeeStartDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_nRightsLevelID));
            if ((Original_mFitnessPackageTarget.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_mFitnessPackageTarget.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_mFitnessProductTarget.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_mFitnessProductTarget.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_mSpaPackageTarget.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_mSpaPackageTarget.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_mSpaProductTarget.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_mSpaProductTarget.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_mPTPackageTarget.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_mPTPackageTarget.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_nInstructorTypeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_nInstructorTypeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_nServiceCommLevel.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_nServiceCommLevel.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_strContactNo == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_strContactNo));
            }
            if ((Original_fPartTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_fPartTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_nStatusID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_nStatusID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_nDepartmentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_nDepartmentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_fProbation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_fProbation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_fMaternityLeave.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((bool)(Original_fMaternityLeave.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_fChildcareLeave.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((bool)(Original_fChildcareLeave.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_fRegistrationFee));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_fPtInstructor));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_fSalesPerson));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((bool)(Original_fServiceCommission));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_fInstructor));
            if ((Original_fMemoGroup.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_fMemoGroup.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[45].Value = ((int)(Original_nLeaveGroup));
            if ((Original_fSpaConsult.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_fSpaConsult.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_fTherapist.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((bool)(Original_fTherapist.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_fMSE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((bool)(Original_fMSE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_strRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_strRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int nEmployeeID, 
                    string strEmployeeName, 
                    string strPassword, 
                    string strJobPositionCode, 
                    string strBranchCode, 
                    global::System.Nullable<global::System.DateTime> dtEmployeeStartDate, 
                    int nRightsLevelID, 
                    global::System.Nullable<decimal> mFitnessPackageTarget, 
                    global::System.Nullable<decimal> mFitnessProductTarget, 
                    global::System.Nullable<decimal> mSpaPackageTarget, 
                    global::System.Nullable<decimal> mSpaProductTarget, 
                    global::System.Nullable<decimal> mPTPackageTarget, 
                    global::System.Nullable<int> nInstructorTypeID, 
                    global::System.Nullable<int> nServiceCommLevel, 
                    string strContactNo, 
                    global::System.Nullable<bool> fPartTime, 
                    global::System.Nullable<bool> nStatusID, 
                    global::System.Nullable<int> nDepartmentID, 
                    global::System.Nullable<bool> fProbation, 
                    global::System.Nullable<bool> fMaternityLeave, 
                    global::System.Nullable<bool> fChildcareLeave, 
                    bool fRegistrationFee, 
                    bool fPtInstructor, 
                    bool fSalesPerson, 
                    bool fServiceCommission, 
                    bool fInstructor, 
                    global::System.Nullable<bool> fMemoGroup, 
                    int nLeaveGroup, 
                    global::System.Nullable<bool> fSpaConsult, 
                    global::System.Nullable<bool> fTherapist, 
                    global::System.Nullable<bool> fMSE, 
                    string strRemark) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(nEmployeeID));
            if ((strEmployeeName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(strEmployeeName));
            }
            if ((strPassword == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(strPassword));
            }
            if ((strJobPositionCode == null)) {
                throw new global::System.ArgumentNullException("strJobPositionCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(strJobPositionCode));
            }
            if ((strBranchCode == null)) {
                throw new global::System.ArgumentNullException("strBranchCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(strBranchCode));
            }
            if ((dtEmployeeStartDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(dtEmployeeStartDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(nRightsLevelID));
            if ((mFitnessPackageTarget.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(mFitnessPackageTarget.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((mFitnessProductTarget.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(mFitnessProductTarget.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((mSpaPackageTarget.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(mSpaPackageTarget.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((mSpaProductTarget.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(mSpaProductTarget.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((mPTPackageTarget.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(mPTPackageTarget.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((nInstructorTypeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(nInstructorTypeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((nServiceCommLevel.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(nServiceCommLevel.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((strContactNo == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(strContactNo));
            }
            if ((fPartTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(fPartTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((nStatusID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(nStatusID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((nDepartmentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(nDepartmentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((fProbation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(fProbation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((fMaternityLeave.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(fMaternityLeave.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((fChildcareLeave.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(fChildcareLeave.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(fRegistrationFee));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(fPtInstructor));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(fSalesPerson));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(fServiceCommission));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(fInstructor));
            if ((fMemoGroup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(fMemoGroup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(nLeaveGroup));
            if ((fSpaConsult.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(fSpaConsult.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((fTherapist.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(fTherapist.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((fMSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(fMSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((strRemark == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(strRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int nEmployeeID, 
                    string strEmployeeName, 
                    string strPassword, 
                    string strJobPositionCode, 
                    string strBranchCode, 
                    global::System.Nullable<global::System.DateTime> dtEmployeeStartDate, 
                    int nRightsLevelID, 
                    global::System.Nullable<decimal> mFitnessPackageTarget, 
                    global::System.Nullable<decimal> mFitnessProductTarget, 
                    global::System.Nullable<decimal> mSpaPackageTarget, 
                    global::System.Nullable<decimal> mSpaProductTarget, 
                    global::System.Nullable<decimal> mPTPackageTarget, 
                    global::System.Nullable<int> nInstructorTypeID, 
                    global::System.Nullable<int> nServiceCommLevel, 
                    string strContactNo, 
                    global::System.Nullable<bool> fPartTime, 
                    global::System.Nullable<bool> nStatusID, 
                    global::System.Nullable<int> nDepartmentID, 
                    global::System.Nullable<bool> fProbation, 
                    global::System.Nullable<bool> fMaternityLeave, 
                    global::System.Nullable<bool> fChildcareLeave, 
                    bool fRegistrationFee, 
                    bool fPtInstructor, 
                    bool fSalesPerson, 
                    bool fServiceCommission, 
                    bool fInstructor, 
                    global::System.Nullable<bool> fMemoGroup, 
                    int nLeaveGroup, 
                    global::System.Nullable<bool> fSpaConsult, 
                    global::System.Nullable<bool> fTherapist, 
                    global::System.Nullable<bool> fMSE, 
                    string strRemark, 
                    int Original_nEmployeeID, 
                    string Original_strEmployeeName, 
                    string Original_strPassword, 
                    string Original_strJobPositionCode, 
                    string Original_strBranchCode, 
                    global::System.Nullable<global::System.DateTime> Original_dtEmployeeStartDate, 
                    int Original_nRightsLevelID, 
                    global::System.Nullable<decimal> Original_mFitnessPackageTarget, 
                    global::System.Nullable<decimal> Original_mFitnessProductTarget, 
                    global::System.Nullable<decimal> Original_mSpaPackageTarget, 
                    global::System.Nullable<decimal> Original_mSpaProductTarget, 
                    global::System.Nullable<decimal> Original_mPTPackageTarget, 
                    global::System.Nullable<int> Original_nInstructorTypeID, 
                    global::System.Nullable<int> Original_nServiceCommLevel, 
                    string Original_strContactNo, 
                    global::System.Nullable<bool> Original_fPartTime, 
                    global::System.Nullable<bool> Original_nStatusID, 
                    global::System.Nullable<int> Original_nDepartmentID, 
                    global::System.Nullable<bool> Original_fProbation, 
                    global::System.Nullable<bool> Original_fMaternityLeave, 
                    global::System.Nullable<bool> Original_fChildcareLeave, 
                    bool Original_fRegistrationFee, 
                    bool Original_fPtInstructor, 
                    bool Original_fSalesPerson, 
                    bool Original_fServiceCommission, 
                    bool Original_fInstructor, 
                    global::System.Nullable<bool> Original_fMemoGroup, 
                    int Original_nLeaveGroup, 
                    global::System.Nullable<bool> Original_fSpaConsult, 
                    global::System.Nullable<bool> Original_fTherapist, 
                    global::System.Nullable<bool> Original_fMSE, 
                    string Original_strRemark) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(nEmployeeID));
            if ((strEmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(strEmployeeName));
            }
            if ((strPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(strPassword));
            }
            if ((strJobPositionCode == null)) {
                throw new global::System.ArgumentNullException("strJobPositionCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(strJobPositionCode));
            }
            if ((strBranchCode == null)) {
                throw new global::System.ArgumentNullException("strBranchCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(strBranchCode));
            }
            if ((dtEmployeeStartDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(dtEmployeeStartDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(nRightsLevelID));
            if ((mFitnessPackageTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(mFitnessPackageTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((mFitnessProductTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(mFitnessProductTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((mSpaPackageTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(mSpaPackageTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((mSpaProductTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(mSpaProductTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((mPTPackageTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(mPTPackageTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((nInstructorTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(nInstructorTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((nServiceCommLevel.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(nServiceCommLevel.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((strContactNo == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(strContactNo));
            }
            if ((fPartTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(fPartTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((nStatusID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(nStatusID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((nDepartmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(nDepartmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((fProbation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(fProbation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((fMaternityLeave.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(fMaternityLeave.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((fChildcareLeave.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(fChildcareLeave.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(fRegistrationFee));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(fPtInstructor));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(fSalesPerson));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(fServiceCommission));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(fInstructor));
            if ((fMemoGroup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(fMemoGroup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(nLeaveGroup));
            if ((fSpaConsult.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(fSpaConsult.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((fTherapist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(fTherapist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((fMSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(fMSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((strRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(strRemark));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_nEmployeeID));
            if ((Original_strEmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_strEmployeeName));
            }
            if ((Original_strPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_strPassword));
            }
            if ((Original_strJobPositionCode == null)) {
                throw new global::System.ArgumentNullException("Original_strJobPositionCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_strJobPositionCode));
            }
            if ((Original_strBranchCode == null)) {
                throw new global::System.ArgumentNullException("Original_strBranchCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_strBranchCode));
            }
            if ((Original_dtEmployeeStartDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_dtEmployeeStartDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_nRightsLevelID));
            if ((Original_mFitnessPackageTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_mFitnessPackageTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_mFitnessProductTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_mFitnessProductTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_mSpaPackageTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_mSpaPackageTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_mSpaProductTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_mSpaProductTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_mPTPackageTarget.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(Original_mPTPackageTarget.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_nInstructorTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_nInstructorTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_nServiceCommLevel.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_nServiceCommLevel.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_strContactNo == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_strContactNo));
            }
            if ((Original_fPartTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_fPartTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_nStatusID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_nStatusID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_nDepartmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_nDepartmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_fProbation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_fProbation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_fMaternityLeave.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_fMaternityLeave.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_fChildcareLeave.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_fChildcareLeave.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_fRegistrationFee));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_fPtInstructor));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_fSalesPerson));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_fServiceCommission));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(Original_fInstructor));
            if ((Original_fMemoGroup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(Original_fMemoGroup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_nLeaveGroup));
            if ((Original_fSpaConsult.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(Original_fSpaConsult.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_fTherapist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_fTherapist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_fMSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_fMSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_strRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_strRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string strEmployeeName, 
                    string strPassword, 
                    string strJobPositionCode, 
                    string strBranchCode, 
                    global::System.Nullable<global::System.DateTime> dtEmployeeStartDate, 
                    int nRightsLevelID, 
                    global::System.Nullable<decimal> mFitnessPackageTarget, 
                    global::System.Nullable<decimal> mFitnessProductTarget, 
                    global::System.Nullable<decimal> mSpaPackageTarget, 
                    global::System.Nullable<decimal> mSpaProductTarget, 
                    global::System.Nullable<decimal> mPTPackageTarget, 
                    global::System.Nullable<int> nInstructorTypeID, 
                    global::System.Nullable<int> nServiceCommLevel, 
                    string strContactNo, 
                    global::System.Nullable<bool> fPartTime, 
                    global::System.Nullable<bool> nStatusID, 
                    global::System.Nullable<int> nDepartmentID, 
                    global::System.Nullable<bool> fProbation, 
                    global::System.Nullable<bool> fMaternityLeave, 
                    global::System.Nullable<bool> fChildcareLeave, 
                    bool fRegistrationFee, 
                    bool fPtInstructor, 
                    bool fSalesPerson, 
                    bool fServiceCommission, 
                    bool fInstructor, 
                    global::System.Nullable<bool> fMemoGroup, 
                    int nLeaveGroup, 
                    global::System.Nullable<bool> fSpaConsult, 
                    global::System.Nullable<bool> fTherapist, 
                    global::System.Nullable<bool> fMSE, 
                    string strRemark, 
                    int Original_nEmployeeID, 
                    string Original_strEmployeeName, 
                    string Original_strPassword, 
                    string Original_strJobPositionCode, 
                    string Original_strBranchCode, 
                    global::System.Nullable<global::System.DateTime> Original_dtEmployeeStartDate, 
                    int Original_nRightsLevelID, 
                    global::System.Nullable<decimal> Original_mFitnessPackageTarget, 
                    global::System.Nullable<decimal> Original_mFitnessProductTarget, 
                    global::System.Nullable<decimal> Original_mSpaPackageTarget, 
                    global::System.Nullable<decimal> Original_mSpaProductTarget, 
                    global::System.Nullable<decimal> Original_mPTPackageTarget, 
                    global::System.Nullable<int> Original_nInstructorTypeID, 
                    global::System.Nullable<int> Original_nServiceCommLevel, 
                    string Original_strContactNo, 
                    global::System.Nullable<bool> Original_fPartTime, 
                    global::System.Nullable<bool> Original_nStatusID, 
                    global::System.Nullable<int> Original_nDepartmentID, 
                    global::System.Nullable<bool> Original_fProbation, 
                    global::System.Nullable<bool> Original_fMaternityLeave, 
                    global::System.Nullable<bool> Original_fChildcareLeave, 
                    bool Original_fRegistrationFee, 
                    bool Original_fPtInstructor, 
                    bool Original_fSalesPerson, 
                    bool Original_fServiceCommission, 
                    bool Original_fInstructor, 
                    global::System.Nullable<bool> Original_fMemoGroup, 
                    int Original_nLeaveGroup, 
                    global::System.Nullable<bool> Original_fSpaConsult, 
                    global::System.Nullable<bool> Original_fTherapist, 
                    global::System.Nullable<bool> Original_fMSE, 
                    string Original_strRemark) {
            return this.Update(Original_nEmployeeID, strEmployeeName, strPassword, strJobPositionCode, strBranchCode, dtEmployeeStartDate, nRightsLevelID, mFitnessPackageTarget, mFitnessProductTarget, mSpaPackageTarget, mSpaProductTarget, mPTPackageTarget, nInstructorTypeID, nServiceCommLevel, strContactNo, fPartTime, nStatusID, nDepartmentID, fProbation, fMaternityLeave, fChildcareLeave, fRegistrationFee, fPtInstructor, fSalesPerson, fServiceCommission, fInstructor, fMemoGroup, nLeaveGroup, fSpaConsult, fTherapist, fMSE, strRemark, Original_nEmployeeID, Original_strEmployeeName, Original_strPassword, Original_strJobPositionCode, Original_strBranchCode, Original_dtEmployeeStartDate, Original_nRightsLevelID, Original_mFitnessPackageTarget, Original_mFitnessProductTarget, Original_mSpaPackageTarget, Original_mSpaProductTarget, Original_mPTPackageTarget, Original_nInstructorTypeID, Original_nServiceCommLevel, Original_strContactNo, Original_fPartTime, Original_nStatusID, Original_nDepartmentID, Original_fProbation, Original_fMaternityLeave, Original_fChildcareLeave, Original_fRegistrationFee, Original_fPtInstructor, Original_fSalesPerson, Original_fServiceCommission, Original_fInstructor, Original_fMemoGroup, Original_nLeaveGroup, Original_fSpaConsult, Original_fTherapist, Original_fMSE, Original_strRemark);
        }
    }
}

#pragma warning restore 1591