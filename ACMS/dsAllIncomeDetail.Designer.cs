//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ACMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsAllIncomeDetail")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsAllIncomeDetail : global::System.Data.DataSet {
        
        private DWV_IncomeAnalysis_prev10DataTable tableDWV_IncomeAnalysis_prev10;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsAllIncomeDetail() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsAllIncomeDetail(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DWV_IncomeAnalysis_prev10"] != null)) {
                    base.Tables.Add(new DWV_IncomeAnalysis_prev10DataTable(ds.Tables["DWV_IncomeAnalysis_prev10"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DWV_IncomeAnalysis_prev10DataTable DWV_IncomeAnalysis_prev10 {
            get {
                return this.tableDWV_IncomeAnalysis_prev10;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsAllIncomeDetail cln = ((dsAllIncomeDetail)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DWV_IncomeAnalysis_prev10"] != null)) {
                    base.Tables.Add(new DWV_IncomeAnalysis_prev10DataTable(ds.Tables["DWV_IncomeAnalysis_prev10"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDWV_IncomeAnalysis_prev10 = ((DWV_IncomeAnalysis_prev10DataTable)(base.Tables["DWV_IncomeAnalysis_prev10"]));
            if ((initTable == true)) {
                if ((this.tableDWV_IncomeAnalysis_prev10 != null)) {
                    this.tableDWV_IncomeAnalysis_prev10.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsAllIncomeDetail";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsAllIncomeDetail.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDWV_IncomeAnalysis_prev10 = new DWV_IncomeAnalysis_prev10DataTable();
            base.Tables.Add(this.tableDWV_IncomeAnalysis_prev10);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDWV_IncomeAnalysis_prev10() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsAllIncomeDetail ds = new dsAllIncomeDetail();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DWV_IncomeAnalysis_prev10RowChangeEventHandler(object sender, DWV_IncomeAnalysis_prev10RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DWV_IncomeAnalysis_prev10DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndtDate;
            
            private global::System.Data.DataColumn columnYY;
            
            private global::System.Data.DataColumn columnMM;
            
            private global::System.Data.DataColumn columnDaysMonthEnd;
            
            private global::System.Data.DataColumn columndatedif;
            
            private global::System.Data.DataColumn columndtMonth;
            
            private global::System.Data.DataColumn columnstrBranchCode;
            
            private global::System.Data.DataColumn columnnReportGroupID;
            
            private global::System.Data.DataColumn columnTargetAmount;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnmNettAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DWV_IncomeAnalysis_prev10DataTable() {
                this.TableName = "DWV_IncomeAnalysis_prev10";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DWV_IncomeAnalysis_prev10DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DWV_IncomeAnalysis_prev10DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dtDateColumn {
                get {
                    return this.columndtDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YYColumn {
                get {
                    return this.columnYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MMColumn {
                get {
                    return this.columnMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysMonthEndColumn {
                get {
                    return this.columnDaysMonthEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datedifColumn {
                get {
                    return this.columndatedif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dtMonthColumn {
                get {
                    return this.columndtMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strBranchCodeColumn {
                get {
                    return this.columnstrBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nReportGroupIDColumn {
                get {
                    return this.columnnReportGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetAmountColumn {
                get {
                    return this.columnTargetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mNettAmountColumn {
                get {
                    return this.columnmNettAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DWV_IncomeAnalysis_prev10Row this[int index] {
                get {
                    return ((DWV_IncomeAnalysis_prev10Row)(this.Rows[index]));
                }
            }
            
            public event DWV_IncomeAnalysis_prev10RowChangeEventHandler DWV_IncomeAnalysis_prev10RowChanging;
            
            public event DWV_IncomeAnalysis_prev10RowChangeEventHandler DWV_IncomeAnalysis_prev10RowChanged;
            
            public event DWV_IncomeAnalysis_prev10RowChangeEventHandler DWV_IncomeAnalysis_prev10RowDeleting;
            
            public event DWV_IncomeAnalysis_prev10RowChangeEventHandler DWV_IncomeAnalysis_prev10RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDWV_IncomeAnalysis_prev10Row(DWV_IncomeAnalysis_prev10Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DWV_IncomeAnalysis_prev10Row AddDWV_IncomeAnalysis_prev10Row(System.DateTime dtDate, int YY, int MM, int DaysMonthEnd, int datedif, string dtMonth, string strBranchCode, int nReportGroupID, decimal TargetAmount, decimal TotalAmount, decimal mNettAmount) {
                DWV_IncomeAnalysis_prev10Row rowDWV_IncomeAnalysis_prev10Row = ((DWV_IncomeAnalysis_prev10Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        dtDate,
                        YY,
                        MM,
                        DaysMonthEnd,
                        datedif,
                        dtMonth,
                        strBranchCode,
                        nReportGroupID,
                        TargetAmount,
                        TotalAmount,
                        mNettAmount};
                rowDWV_IncomeAnalysis_prev10Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDWV_IncomeAnalysis_prev10Row);
                return rowDWV_IncomeAnalysis_prev10Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DWV_IncomeAnalysis_prev10DataTable cln = ((DWV_IncomeAnalysis_prev10DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DWV_IncomeAnalysis_prev10DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndtDate = base.Columns["dtDate"];
                this.columnYY = base.Columns["YY"];
                this.columnMM = base.Columns["MM"];
                this.columnDaysMonthEnd = base.Columns["DaysMonthEnd"];
                this.columndatedif = base.Columns["datedif"];
                this.columndtMonth = base.Columns["dtMonth"];
                this.columnstrBranchCode = base.Columns["strBranchCode"];
                this.columnnReportGroupID = base.Columns["nReportGroupID"];
                this.columnTargetAmount = base.Columns["TargetAmount"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnmNettAmount = base.Columns["mNettAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndtDate = new global::System.Data.DataColumn("dtDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtDate);
                this.columnYY = new global::System.Data.DataColumn("YY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYY);
                this.columnMM = new global::System.Data.DataColumn("MM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM);
                this.columnDaysMonthEnd = new global::System.Data.DataColumn("DaysMonthEnd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysMonthEnd);
                this.columndatedif = new global::System.Data.DataColumn("datedif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatedif);
                this.columndtMonth = new global::System.Data.DataColumn("dtMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtMonth);
                this.columnstrBranchCode = new global::System.Data.DataColumn("strBranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchCode);
                this.columnnReportGroupID = new global::System.Data.DataColumn("nReportGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnReportGroupID);
                this.columnTargetAmount = new global::System.Data.DataColumn("TargetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetAmount);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnmNettAmount = new global::System.Data.DataColumn("mNettAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmNettAmount);
                this.columndtDate.AllowDBNull = false;
                this.columnYY.ReadOnly = true;
                this.columnMM.ReadOnly = true;
                this.columnDaysMonthEnd.ReadOnly = true;
                this.columndatedif.ReadOnly = true;
                this.columndtMonth.ReadOnly = true;
                this.columndtMonth.MaxLength = 30;
                this.columnstrBranchCode.AllowDBNull = false;
                this.columnstrBranchCode.MaxLength = 2;
                this.columnTargetAmount.AllowDBNull = false;
                this.columnTotalAmount.ReadOnly = true;
                this.columnmNettAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DWV_IncomeAnalysis_prev10Row NewDWV_IncomeAnalysis_prev10Row() {
                return ((DWV_IncomeAnalysis_prev10Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DWV_IncomeAnalysis_prev10Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DWV_IncomeAnalysis_prev10Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DWV_IncomeAnalysis_prev10RowChanged != null)) {
                    this.DWV_IncomeAnalysis_prev10RowChanged(this, new DWV_IncomeAnalysis_prev10RowChangeEvent(((DWV_IncomeAnalysis_prev10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DWV_IncomeAnalysis_prev10RowChanging != null)) {
                    this.DWV_IncomeAnalysis_prev10RowChanging(this, new DWV_IncomeAnalysis_prev10RowChangeEvent(((DWV_IncomeAnalysis_prev10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DWV_IncomeAnalysis_prev10RowDeleted != null)) {
                    this.DWV_IncomeAnalysis_prev10RowDeleted(this, new DWV_IncomeAnalysis_prev10RowChangeEvent(((DWV_IncomeAnalysis_prev10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DWV_IncomeAnalysis_prev10RowDeleting != null)) {
                    this.DWV_IncomeAnalysis_prev10RowDeleting(this, new DWV_IncomeAnalysis_prev10RowChangeEvent(((DWV_IncomeAnalysis_prev10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDWV_IncomeAnalysis_prev10Row(DWV_IncomeAnalysis_prev10Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsAllIncomeDetail ds = new dsAllIncomeDetail();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DWV_IncomeAnalysis_prev10DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DWV_IncomeAnalysis_prev10Row : global::System.Data.DataRow {
            
            private DWV_IncomeAnalysis_prev10DataTable tableDWV_IncomeAnalysis_prev10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DWV_IncomeAnalysis_prev10Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDWV_IncomeAnalysis_prev10 = ((DWV_IncomeAnalysis_prev10DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dtDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDWV_IncomeAnalysis_prev10.dtDateColumn]));
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.dtDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YY {
                get {
                    try {
                        return ((int)(this[this.tableDWV_IncomeAnalysis_prev10.YYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YY\' in table \'DWV_IncomeAnalysis_prev10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.YYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM {
                get {
                    try {
                        return ((int)(this[this.tableDWV_IncomeAnalysis_prev10.MMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MM\' in table \'DWV_IncomeAnalysis_prev10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.MMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DaysMonthEnd {
                get {
                    try {
                        return ((int)(this[this.tableDWV_IncomeAnalysis_prev10.DaysMonthEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysMonthEnd\' in table \'DWV_IncomeAnalysis_prev10\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.DaysMonthEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int datedif {
                get {
                    try {
                        return ((int)(this[this.tableDWV_IncomeAnalysis_prev10.datedifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datedif\' in table \'DWV_IncomeAnalysis_prev10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.datedifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dtMonth {
                get {
                    try {
                        return ((string)(this[this.tableDWV_IncomeAnalysis_prev10.dtMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtMonth\' in table \'DWV_IncomeAnalysis_prev10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.dtMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strBranchCode {
                get {
                    return ((string)(this[this.tableDWV_IncomeAnalysis_prev10.strBranchCodeColumn]));
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.strBranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nReportGroupID {
                get {
                    try {
                        return ((int)(this[this.tableDWV_IncomeAnalysis_prev10.nReportGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nReportGroupID\' in table \'DWV_IncomeAnalysis_prev10\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.nReportGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TargetAmount {
                get {
                    return ((decimal)(this[this.tableDWV_IncomeAnalysis_prev10.TargetAmountColumn]));
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.TargetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDWV_IncomeAnalysis_prev10.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'DWV_IncomeAnalysis_prev10\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mNettAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDWV_IncomeAnalysis_prev10.mNettAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mNettAmount\' in table \'DWV_IncomeAnalysis_prev10\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDWV_IncomeAnalysis_prev10.mNettAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYYNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.YYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYYNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.YYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMMNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.MMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMMNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.MMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysMonthEndNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.DaysMonthEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysMonthEndNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.DaysMonthEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatedifNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.datedifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatedifNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.datedifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdtMonthNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.dtMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdtMonthNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.dtMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnReportGroupIDNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.nReportGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnReportGroupIDNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.nReportGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmNettAmountNull() {
                return this.IsNull(this.tableDWV_IncomeAnalysis_prev10.mNettAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmNettAmountNull() {
                this[this.tableDWV_IncomeAnalysis_prev10.mNettAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DWV_IncomeAnalysis_prev10RowChangeEvent : global::System.EventArgs {
            
            private DWV_IncomeAnalysis_prev10Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DWV_IncomeAnalysis_prev10RowChangeEvent(DWV_IncomeAnalysis_prev10Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DWV_IncomeAnalysis_prev10Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ACMS.dsAllIncomeDetailTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DWV_IncomeAnalysis_prev10TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DWV_IncomeAnalysis_prev10TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DWV_IncomeAnalysis_prev10";
            tableMapping.ColumnMappings.Add("dtDate", "dtDate");
            tableMapping.ColumnMappings.Add("YY", "YY");
            tableMapping.ColumnMappings.Add("MM", "MM");
            tableMapping.ColumnMappings.Add("DaysMonthEnd", "DaysMonthEnd");
            tableMapping.ColumnMappings.Add("datedif", "datedif");
            tableMapping.ColumnMappings.Add("dtMonth", "dtMonth");
            tableMapping.ColumnMappings.Add("strBranchCode", "strBranchCode");
            tableMapping.ColumnMappings.Add("nReportGroupID", "nReportGroupID");
            tableMapping.ColumnMappings.Add("TargetAmount", "TargetAmount");
            tableMapping.ColumnMappings.Add("TotalAmount", "TotalAmount");
            tableMapping.ColumnMappings.Add("mNettAmount", "mNettAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ACMS.Properties.Settings.Default.ACMSConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Select distinct 
		dtDate,
		year(dtDate) as YY,
		month(dtDate) as MM, 
		datediff(d,dtDate,dbo.fn_GetLastDayOfMonth(dtDate)) as DaysMonthEnd, 
		datediff(month,dtdate,getdate()) as datedif,DateName(month,dtDate) as dtMonth, 
		strBranchCode, nReportGroupID,
		TargetAmount--,mAmount,strReceiptno
		,sum(mAmount) As TotalAmount,	
		cast(sum(mAmount)/(SELECT dTaxRate + 1.00 FROM tblTax WHERE nTaxID = CASE WHEN dtDate < '1-jul-2007' THEN 2 ELSE 1 END) as numeric(8,2))  As mNettAmount
		
		from 
		DWV_AllIncome_Detail
		
		Where strBranchCode In 
		(Select strBranchCode from tblEmployeeBranchRights Where nEmployeeID = @empID) and nReportGroupID = @nSalesCategoryID 
		and month(dtDate) = @month and year(dtDate)= @year and day(dtdate) <= @day
		group by dtDate,TargetAmount,strBranchCode,nReportGroupID
		Order By dtDate asc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nSalesCategoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nReportGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@month", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsAllIncomeDetail.DWV_IncomeAnalysis_prev10DataTable dataTable, global::System.Nullable<int> nSalesCategoryID, decimal month, decimal year, int day, int empID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((nSalesCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nSalesCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(month));
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(year));
            this.Adapter.SelectCommand.Parameters[3].Value = ((int)(day));
            this.Adapter.SelectCommand.Parameters[4].Value = ((int)(empID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsAllIncomeDetail.DWV_IncomeAnalysis_prev10DataTable GetData(global::System.Nullable<int> nSalesCategoryID, decimal month, decimal year, int day, int empID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((nSalesCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nSalesCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(month));
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(year));
            this.Adapter.SelectCommand.Parameters[3].Value = ((int)(day));
            this.Adapter.SelectCommand.Parameters[4].Value = ((int)(empID));
            dsAllIncomeDetail.DWV_IncomeAnalysis_prev10DataTable dataTable = new dsAllIncomeDetail.DWV_IncomeAnalysis_prev10DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591